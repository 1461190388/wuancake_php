1  HTML DOM 对象 - 方法和属性

一些常用的 HTML DOM 方法：
getElementById(id) - 获取带有指定 id 的节点（元素）
appendChild(node) - 插入新的子节点（元素）
removeChild(node) - 删除子节点（元素）

一些常用的 HTML DOM 属性：
innerHTML - 节点（元素）的文本值
parentNode - 节点（元素）的父节点
childNodes - 节点（元素）的子节点
attributes - 节点（元素）的属性节点


getElementById()	返回带有指定 ID 的元素。
getElementsByTagName()	返回包含带有指定标签名称的所有元素的节点列表（集合/节点数组）。
getElementsByClassName()	返回包含带有指定类名的所有元素的节点列表。
appendChild()	把新的子节点添加到指定节点。
removeChild()	删除子节点。
replaceChild()	替换子节点。
insertBefore()	在指定的子节点前面插入新的子节点。
createAttribute()	创建属性节点。
createElement()	创建元素节点。
createTextNode()	创建文本节点。
getAttribute()	返回指定的属性值。
setAttribute()	把指定属性设置或修改为指定的值。

2  HTMLDOM访问

innerHTML属性用于获取或改变任意 HTML 元素，包括 <html> 和 <body>
<html>
<body>
<div id=test>
<p id="intro">Hello World!</p>
<p>Hello </p>
</div>
<script>
//intro标签内容赋值给txt
var txt=document.getElementById("intro").innerHTML;
//输出txt
document.write(txt);
//test中的第2个p标签内容赋值txt1
var txt1=document.getElementById("test").getElementByTagName("p");
document.write(x[1].innerHTML);
//class=intro的所有元素列表
var txt2=document.getElementsByClassName("intro");
</script>
</body>
</html>


nodeValue 属性规定节点的值。
元素节点的 nodeValue 是 undefined 或 null
文本节点的 nodeValue 是文本本身
属性节点的 nodeValue 是属性值


3  HTMLDOM修改
<html>
<body>
<div id="d1">
<p id="p1">This is a paragraph.</p>
<p id="p2">This is another paragraph.</p>
<!改变body标签的背景颜色>
<input type="button" onclick="document.body.style.backgroundColor='lavender';"
value="Change background color" />
</div>
</body>
<script>
//改变p1的内容
document.getElementById("p1").innerHTML="New text!";
//创建p节点内容为node
var para=document.createElement("p");
var node=document.createTextNode("This is new.");
para.appendChild(node);
//将创建的元素加入di中
var element=document.getElementById("d1");
element.appendChild(para);
</script>
</html>













